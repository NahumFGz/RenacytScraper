"{'pageref': 'renacyt_profile', 'startedDateTime': '2023-11-28T12:48:36.576-05:00', 'request': {'method': 'GET', 'url': 'https://servicio-renacyt.concytec.gob.pe/wp-content/plugins/responsive-iframe/src//js/responsiveIframe.js?ver=6.0.1', 'httpVersion': 'HTTP/1.1', 'cookies': [], 'headers': [{'name': 'Host', 'value': 'servicio-renacyt.concytec.gob.pe'}, {'name': 'Connection', 'value': 'keep-alive'}, {'name': 'sec-ch-ua', 'value': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"'}, {'name': 'sec-ch-ua-mobile', 'value': '?0'}, {'name': 'User-Agent', 'value': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36'}, {'name': 'sec-ch-ua-platform', 'value': '\"macOS\"'}, {'name': 'Accept', 'value': '*/*'}, {'name': 'Sec-Fetch-Site', 'value': 'same-origin'}, {'name': 'Sec-Fetch-Mode', 'value': 'no-cors'}, {'name': 'Sec-Fetch-Dest', 'value': 'script'}, {'name': 'Referer', 'value': 'https://servicio-renacyt.concytec.gob.pe/ficha-renacyt/?idInvestigador=117300'}, {'name': 'Accept-Encoding', 'value': 'gzip, deflate, br'}, {'name': 'Accept-Language', 'value': 'es-419,es;q=0.9'}], 'queryString': [{'name': 'ver', 'value': '6.0.1'}], 'headersSize': 667, 'bodySize': 0, 'comment': ''}, 'response': {'status': 200, 'statusText': 'OK', 'httpVersion': 'HTTP/1.1', 'cookies': [], 'headers': [{'name': 'Date', 'value': 'Tue, 28 Nov 2023 17:48:36 GMT'}, {'name': 'Server', 'value': 'Apache/2.4.41 (Ubuntu)'}, {'name': 'Last-Modified', 'value': 'Fri, 08 Jul 2022 22:33:44 GMT'}, {'name': 'ETag', 'value': '\"1bee-5e352cb77c200-gzip\"'}, {'name': 'Accept-Ranges', 'value': 'bytes'}, {'name': 'Vary', 'value': 'Accept-Encoding'}, {'name': 'Content-Encoding', 'value': 'gzip'}, {'name': 'Content-Length', 'value': '1742'}, {'name': 'Content-Type', 'value': 'application/javascript'}], 'content': {'size': 7150, 'mimeType': 'application/javascript', 'text': 'jQuery(document).ready(function () {    \\r\\n    class ResponsiveIframePatrick {\\r\\n        constructor(){\\r\\n            \\r\\n            \\r\\n            //setup class variables\\r\\n            this.initVariables();\\r\\n            \\r\\n            //setup only when responsive iframe elements present\\r\\n            let classSelector = \\'.\\'.concat(this.className);\\r\\n            if(jQuery(classSelector).length > 0){\\r\\n                //do first time resize\\r\\n                this.updateIframe();\\r\\n                this.updateIframe = this.updateIframe.bind(this);\\r\\n                \\r\\n                //setUpEventHandler\\r\\n                jQuery(window).on(\\'resize\\',this.updateIframe);\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n        //initiates this variables\\r\\n        initVariables(){\\r\\n            this.className = RESPONSIVE_IFRAME_CONSTANTS.CLASS_NAME;\\r\\n            this.id=RESPONSIVE_IFRAME_CONSTANTS.ID_NAME;\\r\\n            this.styleID = RESPONSIVE_IFRAME_CONSTANTS.STYLE_ID;\\r\\n        }\\r\\n        \\r\\n        //build a css element to put onto the document, necessary to ensure !important is used and takes precedence over anything else\\r\\n        buildCSS(cssAttributes){\\r\\n            //initiate variables\\r\\n            let styleID = \\'#\\'.concat(this.styleID);\\r\\n            let className = \\'.\\'.concat(this.className);\\r\\n            let css = \\'\\';\\r\\n            let newLine = \\'\\\\n\\';\\r\\n            let tab = \\'\\\\t\\';\\r\\n            \\r\\n            //create the inline style element,ensures it only runs once\\r\\n            if(jQuery(styleID).length === 0 && jQuery(className).length > 0){\\r\\n                jQuery(\\'head:eq(0)\\').append(\\'<style id=\"\\'+ this.styleID + \\'\" type=\"text/css\">\\' + \\'\\' +  \\'</style>\\');\\r\\n            }\\r\\n            \\r\\n            //ensure the appended style is empty\\r\\n            jQuery(styleID).empty();\\r\\n            \\r\\n            //build the css elements\\r\\n            for(let i = 0; i < cssAttributes.length;i++){\\r\\n                css += cssAttributes[i].id  + \\'{\\' + newLine;                              //#ID{        \\r\\n                css += tab + \\'max-width: \\' + cssAttributes[i].maxWidth + newLine;                   //disables max width\\r\\n                css += tab + \\'max-height: \\' + cssAttributes[i].maxWidth + newLine;                  //disables max height\\r\\n                css += tab + \\'width: \\' + cssAttributes[i].width + newLine;                          //sets width\\r\\n                css += tab + \\'height: \\' + cssAttributes[i].height + newLine;                        //sets height\\r\\n                //The Scales\\r\\n                css += tab + \\'transform: \\' + cssAttributes[i].scale + newLine;                      //sets scale\\r\\n                css += tab + \\'-ms-transform: \\' + cssAttributes[i].scale + newLine;                  //sets scale\\r\\n                css += tab + \\'-moz-transform : \\' + cssAttributes[i].scale + newLine;                //sets scale\\r\\n                css += tab + \\'-o-transform: \\' + cssAttributes[i].scale + newLine;                   //sets scale\\r\\n                css += tab + \\'-webkit-transform: \\' + cssAttributes[i].scale + newLine;              //sets scale\\r\\n                \\r\\n                //The scale Origins\\r\\n                css += tab + \\'transform-origin: \\' + cssAttributes[i].scaleOrigin + newLine;         //sets origin\\r\\n                css += tab + \\'-ms-transform-origin: \\' + cssAttributes[i].scaleOrigin + newLine;     //sets origin\\r\\n                css += tab + \\'-moz-transform-origin: \\' + cssAttributes[i].scaleOrigin + newLine;    //sets origin\\r\\n                css += tab + \\'-o-transform-origin: \\' + cssAttributes[i].scaleOrigin + newLine;      //sets origin\\r\\n                css += tab + \\'-webkit-transform-origin: \\' + cssAttributes[i].scaleOrigin + newLine; //sets origin\\r\\n                \\r\\n                //finish the CSS\\r\\n                css += tab + \\'margin-bottom: \\' + cssAttributes[i].marginBottom + newLine;           //sets bottom margin\\r\\n                css += tab + \\'margin-right: \\' + cssAttributes[i].marginRight + newLine;             //sets margin-right\\r\\n                css += \\'} \\' + newLine;                                                    //Close up\\r\\n            }\\r\\n            //place the css into the style element\\r\\n            jQuery(styleID).append(css);\\r\\n        }\\r\\n        \\r\\n        setWidth(selector){\\r\\n            //initialize variables\\r\\n            let width;\\r\\n            const breakPoints = jQuery(selector).data(\\'break-points\\');\\r\\n    \\r\\n            if(breakPoints.length > 0){\\r\\n                let validBreakPoints = breakPoints.filter((bp)=>{return window.innerWidth <= bp.breakPointW});\\r\\n                \\r\\n                //sort to determine the lowest width valid breakPoint\\r\\n                validBreakPoints.sort(function(a, b){return b.breakPointW - a.breakPointW});\\r\\n\\r\\n                if(validBreakPoints.length > 0){\\r\\n                    const activeBreakPoint = validBreakPoints[validBreakPoints.length-1];\\r\\n                    const siteW = activeBreakPoint.siteW;\\r\\n                    width = siteW;\\r\\n                }else{\\r\\n                    width = jQuery(selector).data(\\'width-iframe\\');\\r\\n                }\\r\\n            }else{\\r\\n                width = jQuery(selector).data(\\'width-iframe\\'); \\r\\n            }\\r\\n            \\r\\n            return width;\\r\\n        }\\r\\n\\r\\n        updateIframe(){\\r\\n            //initiate variables\\r\\n            let defaultScaleVal=RESPONSIVE_IFRAME_CONSTANTS.DEFAULT_SCALE_VAL;\\r\\n            let scale = defaultScaleVal;\\r\\n            let className = \\'.\\'.concat(this.className);\\r\\n            let cssAttributes = [];\\r\\n            \\r\\n            //loop thru each classElement\\r\\n            for(let i = 0; i < jQuery(className).length;i++){\\r\\n                //initiate variables\\r\\n                let marginBottom;\\r\\n                let marginRight;\\r\\n\\r\\n                //create a selector for jQuery, and then grab some attributes from some elements\\r\\n                let selector = className.concat(\\':eq(\\' +i+ \\')\\');\\r\\n                let id = jQuery(selector).attr(\\'id\\');\\r\\n                let width = this.setWidth(selector);               \\r\\n                let height = jQuery(selector).data(\\'height-iframe\\'); \\r\\n                let parentWidth = jQuery(selector).parent().width();\\r\\n                \\r\\n                //set the scale and margins, which ensure the makes the iframe responsive\\r\\n                scale = parentWidth/width;\\r\\n                marginBottom =-1 * height * (defaultScaleVal - scale);\\r\\n                marginRight = -1 * width * (defaultScaleVal - scale);\\r\\n                \\r\\n                //Ensure the parent div does not have a larger height than the iframe\\r\\n                jQuery(selector).parent().css({\\'max-height\\':height*scale});\\r\\n                \\r\\n                //build an array of cssAttribute objects\\r\\n                cssAttributes.push(new RESPONSIVE_IFRAME_CONSTANTS.CSS.attributes(id,width,height,scale,marginBottom,marginRight));\\r\\n                \\r\\n            }\\r\\n            //This builds and assigns the css style to the document itself\\r\\n            this.buildCSS(cssAttributes);\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    //initiates the ResponsiveiFrame class\\r\\n    let responsiveIframePatrick = new ResponsiveIframePatrick();\\r\\n    \\r\\n    \\r\\n    \\r\\n});', 'comment': ''}, 'redirectURL': '', 'headersSize': 298, 'bodySize': 1742, 'comment': ''}, 'cache': {}, 'timings': {'comment': '', 'send': 0, 'wait': 141, 'dns': -1, 'blocked': -1, 'connect': -1, 'receive': 0, 'ssl': -1}, 'serverIPAddress': '8.243.100.140', 'comment': '', 'time': 142}"