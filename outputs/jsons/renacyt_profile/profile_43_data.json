"{'pageref': 'renacyt_profile', 'startedDateTime': '2023-11-28T12:48:36.864-05:00', 'request': {'method': 'GET', 'url': 'https://servicio-renacyt.concytec.gob.pe/wp-content/plugins/master-addons-pro/assets/js/plugins.js?ver=1.6.5', 'httpVersion': 'HTTP/1.1', 'cookies': [], 'headers': [{'name': 'Host', 'value': 'servicio-renacyt.concytec.gob.pe'}, {'name': 'Connection', 'value': 'keep-alive'}, {'name': 'sec-ch-ua', 'value': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"'}, {'name': 'sec-ch-ua-mobile', 'value': '?0'}, {'name': 'User-Agent', 'value': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36'}, {'name': 'sec-ch-ua-platform', 'value': '\"macOS\"'}, {'name': 'Accept', 'value': '*/*'}, {'name': 'Sec-Fetch-Site', 'value': 'same-origin'}, {'name': 'Sec-Fetch-Mode', 'value': 'no-cors'}, {'name': 'Sec-Fetch-Dest', 'value': 'script'}, {'name': 'Referer', 'value': 'https://servicio-renacyt.concytec.gob.pe/ficha-renacyt/?idInvestigador=117300'}, {'name': 'Accept-Encoding', 'value': 'gzip, deflate, br'}, {'name': 'Accept-Language', 'value': 'es-419,es;q=0.9'}], 'queryString': [{'name': 'ver', 'value': '1.6.5'}], 'headersSize': 660, 'bodySize': 0, 'comment': ''}, 'response': {'status': 200, 'statusText': 'OK', 'httpVersion': 'HTTP/1.1', 'cookies': [], 'headers': [{'name': 'Date', 'value': 'Tue, 28 Nov 2023 17:48:37 GMT'}, {'name': 'Server', 'value': 'Apache/2.4.41 (Ubuntu)'}, {'name': 'Last-Modified', 'value': 'Fri, 08 Apr 2022 14:28:16 GMT'}, {'name': 'ETag', 'value': '\"911d-5dc2567bea000-gzip\"'}, {'name': 'Accept-Ranges', 'value': 'bytes'}, {'name': 'Vary', 'value': 'Accept-Encoding'}, {'name': 'Content-Encoding', 'value': 'gzip'}, {'name': 'Content-Length', 'value': '9408'}, {'name': 'Content-Type', 'value': 'application/javascript'}], 'content': {'size': 37149, 'mimeType': 'application/javascript', 'text': '/*\\n * ================== js/jquery.appearl.js ===================\\n */\\n\\n;( function( $, window, document, undefined ) {\\n\\n  \"use strict\";\\n\\n  var pluginName = \"appearl\",\\n      defaults = {\\n        offset: 0,\\n        insetOffset: \\'50%\\'\\n      },\\n      attributesMap = {\\n        \\'offset\\': \\'offset\\',\\n        \\'inset-offset\\': \\'insetOffset\\'\\n    },\\n    $window = $(window);\\n\\n  // The actual plugin constructor\\n  function Plugin ( element, options ) {\\n      this.element   = element;\\n      this.$element  = $(element);\\n      this.settings  = $.extend( {}, defaults, options );\\n\\n      // read attributes\\n      for ( var key in attributesMap ) {\\n        var value = attributesMap[ key ],\\n            dataAttr = this.$element.data( key );\\n\\n        if ( dataAttr === undefined ) {\\n            continue;\\n        }\\n\\n        this.settings[ value ] = dataAttr;\\n      }\\n\\n      this.init();\\n  }\\n\\n  // Avoid Plugin.prototype conflicts\\n  $.extend( Plugin.prototype, {\\n      init: function() {\\n        if ( typeof this.settings.offset === \\'object\\' ) {\\n          this._offsetTop = this.settings.offset.top;\\n          this._offsetBottom = this.settings.offset.bottom;\\n        } else {\\n          this._offsetTop = this._offsetBottom = this.settings.offset;\\n        }\\n\\n        // To check if the element is on viewport and set the offset 0 for them\\n        if ( this._isOnViewPort( this.$element) ) {\\n            this._offsetTop = this._offsetBottom = 0\\n        }\\n\\n        this._appeared = false;\\n        this._lastScroll = 0;\\n\\n        $window.on( \\'scroll resize\\', this.update.bind( this ) );\\n        setTimeout( this.update.bind(this) );\\n      },\\n\\n      update: function( event ) {\\n        var rect = this.element.getBoundingClientRect(),\\n        areaTop = this._parseOffset( this._offsetTop ),\\n        areaBottom = window.innerHeight - this._parseOffset( this._offsetBottom ),\\n        insetOffset = this._parseOffset( this.settings.insetOffset, true );\\n\\n        if ( rect.top + insetOffset <= areaBottom && rect.bottom - insetOffset >= areaTop ) {\\n          !this._appeared && this.$element.trigger( \\'appear\\', [{ from: ( this._lastScroll <= $window.scrollTop() ? \\'bottom\\' : \\'top\\' ) }] );\\n          this._appeared = true;\\n        } else if ( this._appeared ) {\\n          this.$element.trigger( \\'disappear\\', [{ from: ( rect.top < areaTop ? \\'top\\' : \\'bottom\\' ) }] );\\n          this._appeared = false;\\n        }\\n\\n        this._lastScroll = $window.scrollTop();\\n      },\\n\\n      _parseOffset: function( value, inset ) {\\n        var percentage = typeof value === \\'string\\' && value.indexOf( \\'%\\' ) !== -1;\\n        value = parseInt( value );\\n\\n        return !percentage ? value : ( inset ? this.element.offsetHeight : window.innerHeight ) * value / 100;\\n      },\\n\\n      _isOnViewPort: function( element ) {\\n        var bottomOffset = this.element.getBoundingClientRect().bottom;\\n        return bottomOffset <  window.innerHeight\\n      },\\n  } );\\n\\n  $.fn[ pluginName ] = function( options ) {\\n      return this.each( function() {\\n          if ( !$.data( this, \"plugin_\" + pluginName ) ) {\\n              $.data( this, \"plugin_\" +\\n                  pluginName, new Plugin( this, options ) );\\n          }\\n      } );\\n  };\\n\\n\\n\\n\\n  /*!\\n   *\\n   * ================== js/plugins/tilt.jquery.js ===================\\n   **/\\n  (function (factory) {\\n      if (typeof define === \\'function\\' && define.amd) {\\n          // AMD. Register as an anonymous module.\\n          define([\\'jquery\\'], factory);\\n      } else if (typeof module === \\'object\\' && module.exports) {\\n          // Node/CommonJS\\n          module.exports = function( root, jQuery ) {\\n              if ( jQuery === undefined ) {\\n                  // require(\\'jQuery\\') returns a factory that requires window to\\n                  // build a jQuery instance, we normalize how we use modules\\n                  // that require this pattern but the window provided is a noop\\n                  // if it\\'s defined (how jquery works)\\n                  if ( typeof window !== \\'undefined\\' ) {\\n                      jQuery = require(\\'jquery\\');\\n                  }\\n                  else {\\n                      jQuery = require(\\'jquery\\')(root);\\n                  }\\n              }\\n              factory(jQuery);\\n              return jQuery;\\n          };\\n      } else {\\n          // Browser globals\\n          factory(jQuery);\\n      }\\n  }(function ($) {\\n      $.fn.tilt = function (options) {\\n\\n          /**\\n           * RequestAnimationFrame\\n           */\\n          const requestTick = function() {\\n              if (this.ticking) return;\\n              requestAnimationFrame(updateTransforms.bind(this));\\n              this.ticking = true;\\n          };\\n\\n          /**\\n           * Bind mouse movement evens on instance\\n           */\\n          const bindEvents = function() {\\n              const _this = this;\\n              $(this).on(\\'mousemove\\', mouseMove);\\n              $(this).on(\\'mouseenter\\', mouseEnter);\\n              if (this.settings.reset) $(this).on(\\'mouseleave\\', mouseLeave);\\n              if (this.settings.glare) $(window).on(\\'resize\\', updateGlareSize.bind(_this));\\n          };\\n\\n          /**\\n           * Set transition only on mouse leave and mouse enter so it doesn\\'t influence mouse move transforms\\n           */\\n          const setTransition = function() {\\n              if (this.timeout !== undefined) clearTimeout(this.timeout);\\n              $(this).css({\\'transition\\': `${this.settings.speed}ms ${this.settings.easing}`});\\n              if(this.settings.glare) this.glareElement.css({\\'transition\\': `opacity ${this.settings.speed}ms ${this.settings.easing}`});\\n              this.timeout = setTimeout(() => {\\n                  $(this).css({\\'transition\\': \\'\\'});\\n                  if(this.settings.glare) this.glareElement.css({\\'transition\\': \\'\\'});\\n              }, this.settings.speed);\\n          };\\n\\n          /**\\n           * When user mouse enters tilt element\\n           */\\n          const mouseEnter = function(event) {\\n              this.ticking = false;\\n              $(this).css({\\'will-change\\': \\'transform\\'});\\n              setTransition.call(this);\\n\\n              // Trigger change event\\n              $(this).trigger(\"tilt.mouseEnter\");\\n          };\\n\\n          /**\\n           * Return the x,y position of the mouse on the tilt element\\n           * @returns {{x: *, y: *}}\\n           */\\n          const getMousePositions = function(event) {\\n              if (typeof(event) === \"undefined\") {\\n                  event = {\\n                      pageX: $(this).offset().left + $(this).outerWidth() / 2,\\n                      pageY: $(this).offset().top + $(this).outerHeight() / 2\\n                  };\\n              }\\n              return {x: event.pageX, y: event.pageY};\\n          };\\n\\n          /**\\n           * When user mouse moves over the tilt element\\n           */\\n          const mouseMove = function(event) {\\n              this.mousePositions = getMousePositions(event);\\n              requestTick.call(this);\\n          };\\n\\n          /**\\n           * When user mouse leaves tilt element\\n           */\\n          const mouseLeave = function() {\\n              setTransition.call(this);\\n              this.reset = true;\\n              requestTick.call(this);\\n\\n              // Trigger change event\\n              $(this).trigger(\"tilt.mouseLeave\");\\n          };\\n\\n          /**\\n           * Get tilt values\\n           *\\n           * @returns {{x: tilt value, y: tilt value}}\\n           */\\n          const getValues = function() {\\n              const width = $(this).outerWidth();\\n              const height = $(this).outerHeight();\\n              const left = $(this).offset().left;\\n              const top = $(this).offset().top;\\n              const percentageX = (this.mousePositions.x - left) / width;\\n              const percentageY = (this.mousePositions.y - top) / height;\\n              // x or y position inside instance / width of instance = percentage of position inside instance * the max tilt value\\n              const tiltX = ((this.settings.maxTilt / 2) - ((percentageX) * this.settings.maxTilt)).toFixed(2);\\n              const tiltY = (((percentageY) * this.settings.maxTilt) - (this.settings.maxTilt / 2)).toFixed(2);\\n              // angle\\n              const angle = Math.atan2(this.mousePositions.x - (left+width/2),- (this.mousePositions.y - (top+height/2)) )*(180/Math.PI);\\n              // Return x & y tilt values\\n              return {tiltX, tiltY, \\'percentageX\\': percentageX * 100, \\'percentageY\\': percentageY * 100, angle};\\n          };\\n\\n          /**\\n           * Update tilt transforms on mousemove\\n           */\\n          const updateTransforms = function() {\\n              this.transforms = getValues.call(this);\\n\\n              if (this.reset) {\\n                  this.reset = false;\\n                  $(this).css(\\'transform\\', `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg)`);\\n\\n                  // Rotate glare if enabled\\n                  if (this.settings.glare){\\n                      this.glareElement.css(\\'transform\\', `rotate(180deg) translate(-50%, -50%)`);\\n                      this.glareElement.css(\\'opacity\\', `0`);\\n                  }\\n\\n                  return;\\n              } else {\\n                  $(this).css(\\'transform\\', `perspective(${this.settings.perspective}px) rotateX(${this.settings.disableAxis === \\'x\\' ? 0 : this.transforms.tiltY}deg) rotateY(${this.settings.disableAxis === \\'y\\' ? 0 : this.transforms.tiltX}deg) scale3d(${this.settings.scale},${this.settings.scale},${this.settings.scale})`);\\n\\n                  // Rotate glare if enabled\\n                  if (this.settings.glare){\\n                      this.glareElement.css(\\'transform\\', `rotate(${this.transforms.angle}deg) translate(-50%, -50%)`);\\n                      this.glareElement.css(\\'opacity\\', `${this.transforms.percentageY * this.settings.maxGlare / 100}`);\\n                  }\\n              }\\n\\n              // Trigger change event\\n              $(this).trigger(\"change\", [this.transforms]);\\n\\n              this.ticking = false;\\n          };\\n\\n          /**\\n           * Prepare elements\\n           */\\n          const prepareGlare = function () {\\n              const glarePrerender = this.settings.glarePrerender;\\n\\n              // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\\n              if (!glarePrerender)\\n              // Create glare element\\n                  $(this).append(\\'<div class=\"js-tilt-glare\"><div class=\"js-tilt-glare-inner\"></div></div>\\');\\n\\n              // Store glare selector if glare is enabled\\n              this.glareElementWrapper = $(this).find(\".js-tilt-glare\");\\n              this.glareElement = $(this).find(\".js-tilt-glare-inner\");\\n\\n              // Remember? We assume all css is already set, so just return\\n              if (glarePrerender) return;\\n\\n              // Abstracted re-usable glare styles\\n              const stretch = {\\n                  \\'position\\': \\'absolute\\',\\n                  \\'top\\': \\'0\\',\\n                  \\'left\\': \\'0\\',\\n                  \\'width\\': \\'100%\\',\\n                  \\'height\\': \\'100%\\',\\n              };\\n\\n              // Style glare wrapper\\n              this.glareElementWrapper.css(stretch).css({\\n                  \\'overflow\\': \\'hidden\\',\\n                  \\'pointer-events\\': \\'none\\',\\n              });\\n\\n              // Style glare element\\n              this.glareElement.css({\\n                  \\'position\\': \\'absolute\\',\\n                  \\'top\\': \\'50%\\',\\n                  \\'left\\': \\'50%\\',\\n                  \\'background-image\\': `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\\n                  \\'width\\': `${$(this).outerWidth()*2}`,\\n                  \\'height\\': `${$(this).outerWidth()*2}`,\\n                  \\'transform\\': \\'rotate(180deg) translate(-50%, -50%)\\',\\n                  \\'transform-origin\\': \\'0% 0%\\',\\n                  \\'opacity\\': \\'0\\',\\n              });\\n\\n          };\\n\\n          /**\\n           * Update glare on resize\\n           */\\n          const updateGlareSize = function () {\\n              this.glareElement.css({\\n                  \\'width\\': `${$(this).outerWidth()*2}`,\\n                  \\'height\\': `${$(this).outerWidth()*2}`,\\n              });\\n          };\\n\\n          /**\\n           * Public methods\\n           */\\n          $.fn.tilt.destroy = function() {\\n              $(this).each(function () {\\n                  $(this).find(\\'.js-tilt-glare\\').remove();\\n                  $(this).css({\\'will-change\\': \\'\\', \\'transform\\': \\'\\'});\\n                  $(this).off(\\'mousemove mouseenter mouseleave\\');\\n              });\\n          };\\n\\n          $.fn.tilt.getValues = function() {\\n              const results = [];\\n              $(this).each(function () {\\n                  this.mousePositions = getMousePositions.call(this);\\n                  results.push(getValues.call(this));\\n              });\\n              return results;\\n          };\\n\\n          $.fn.tilt.reset = function() {\\n              $(this).each(function () {\\n                  this.mousePositions = getMousePositions.call(this);\\n                  this.settings = $(this).data(\\'settings\\');\\n                  mouseLeave.call(this);\\n                  setTimeout(() => {\\n                      this.reset = false;\\n                  }, this.settings.transition);\\n              });\\n          };\\n\\n          /**\\n           * Loop every instance\\n           */\\n          return this.each(function () {\\n\\n              /**\\n               * Default settings merged with user settings\\n               * Can be set trough data attributes or as parameter.\\n               * @type {*}\\n               */\\n              this.settings = $.extend({\\n                  maxTilt: $(this).is(\\'[data-tilt-max]\\') ? $(this).data(\\'tilt-max\\') : 20,\\n                  perspective: $(this).is(\\'[data-tilt-perspective]\\') ? $(this).data(\\'tilt-perspective\\') : 300,\\n                  easing: $(this).is(\\'[data-tilt-easing]\\') ? $(this).data(\\'tilt-easing\\') : \\'cubic-bezier(.03,.98,.52,.99)\\',\\n                  scale: $(this).is(\\'[data-tilt-scale]\\') ? $(this).data(\\'tilt-scale\\') : \\'1\\',\\n                  speed: $(this).is(\\'[data-tilt-speed]\\') ? $(this).data(\\'tilt-speed\\') : \\'400\\',\\n                  transition: $(this).is(\\'[data-tilt-transition]\\') ? $(this).data(\\'tilt-transition\\') : true,\\n                  disableAxis: $(this).is(\\'[data-tilt-disable-axis]\\') ? $(this).data(\\'tilt-disable-axis\\') : null,\\n                  axis: $(this).is(\\'[data-tilt-axis]\\') ? $(this).data(\\'tilt-axis\\') : null,\\n                  reset: $(this).is(\\'[data-tilt-reset]\\') ? $(this).data(\\'tilt-reset\\') : true,\\n                  glare: $(this).is(\\'[data-tilt-glare]\\') ? $(this).data(\\'tilt-glare\\') : false,\\n                  maxGlare: $(this).is(\\'[data-tilt-maxglare]\\') ? $(this).data(\\'tilt-maxglare\\') : 1,\\n              }, options);\\n\\n              // Add deprecation warning & set disableAxis to deprecated axis setting\\n              if(this.settings.axis !== null){\\n                  console.warn(\\'Tilt.js: the axis setting has been renamed to disableAxis. See https://github.com/gijsroge/tilt.js/pull/26 for more information\\');\\n                  this.settings.disableAxis = this.settings.axis;\\n              }\\n\\n              this.init = () => {\\n                  // Store settings\\n                  $(this).data(\\'settings\\', this.settings);\\n\\n                  // Prepare element\\n                  if(this.settings.glare) prepareGlare.call(this);\\n\\n                  // Bind events\\n                  bindEvents.call(this);\\n              };\\n\\n              // Init\\n              this.init();\\n\\n          });\\n      };\\n\\n      /**\\n       * Auto load\\n       */\\n      $(\\'[data-tilt]\\').tilt();\\n\\n      return true;\\n  }));\\n\\n\\n\\n\\n\\n  if( typeof Object.create !== \\'function\\' ){ Object.create = function (obj){ function F(){} F.prototype = obj; return new F();}; }\\n\\n  // config for lazysizes\\n  window.lazySizesConfig = window.lazySizesConfig || {};\\n  window.lazySizesConfig.lazyClass    = \\'jltma-preload\\';\\n  window.lazySizesConfig.loadingClass = \\'jltma-preloading\\';\\n  window.lazySizesConfig.loadedClass  = \\'jltma-preloaded\\';\\n\\n  // On Loading\\n  // an event right before of the \"unveil\" transformation of lazyload\\n  document.addEventListener(\\'lazybeforeunveil\\', function( e ){\\n      var color = e.target.getAttribute( \\'data-bg-color\\' );\\n      if( color ){\\n          e.target.style.backgroundColor = color;\\n      }\\n  });\\n\\n  document.addEventListener(\\'lazyloaded\\', function( e ){\\n      if( e.target.getAttribute(\\'data-bg-color\\') ){\\n        e.target.style.backgroundColor = \\'initial\\';\\n      }\\n      if( e.target.classList.contains(\\'jltma-has-preload-height\\') ){\\n          e.target.classList.remove(\\'jltma-has-preload-height\\');\\n          e.target.style.height = \\'auto\\';\\n      }\\n\\n      // Lazyload videos\\n      if( e.target.nodeName === \"VIDEO\" ){\\n          var video = e.target;\\n\\n          for (var source in video.children) {\\n              var videoSource = video.children[source];\\n              if ( videoSource.tagName === \"SOURCE\" && videoSource.getAttribute(\\'data-src\\') ) {\\n                  videoSource.src = videoSource.getAttribute(\\'data-src\\');\\n              }\\n          }\\n          video.load();\\n\\n          // autoPlay video\\n          if( video.classList.contains(\\'jltma-autoplay\\') ){\\n              video.play();\\n          }\\n      }\\n  });\\n\\n  (function($, window, document, undefined){\\n      \"use strict\";\\n\\n      var resposiveNotLoadedImages = function(){\\n          var width, height, lazysizeImages = document.querySelectorAll(\\'.jltma-preload\\');\\n\\n          Array.prototype.forEach.call(lazysizeImages, function(el, i){\\n              if( ( width = el.getAttribute(\\'width\\') ) && ( height = el.getAttribute(\\'height\\') ) ){\\n                  el.style.height = el.clientWidth/(width/height) + \\'px\\';\\n                  el.classList.add(\\'jltma-has-preload-height\\');\\n              }\\n          });\\n      };\\n\\n      window.addEventListener(\"orientationchange\", resposiveNotLoadedImages);\\n      window.addEventListener(\\'resize\\', resposiveNotLoadedImages);\\n      $(resposiveNotLoadedImages);\\n\\n  })(jQuery, window, document);\\n\\n\\n\\n\\n\\n\\n/*!\\n * ================== js/libs/plugins/lazysizes.js ===================\\n **/\\n\\n(function(window, factory) {\\n  var lazySizes = factory(window, window.document);\\n  window.lazySizes = lazySizes;\\n  if(typeof module == \\'object\\' && module.exports){\\n    module.exports = lazySizes;\\n  }\\n}(window, function l(window, document) {\\n  \\'use strict\\';\\n  /*jshint eqnull:true */\\n  if(!document.getElementsByClassName){return;}\\n\\n  var lazysizes, lazySizesConfig;\\n\\n  var docElem = document.documentElement;\\n\\n  var Date = window.Date;\\n\\n  var supportPicture = window.HTMLPictureElement;\\n\\n  var _addEventListener = \\'addEventListener\\';\\n\\n  var _getAttribute = \\'getAttribute\\';\\n\\n  var addEventListener = window[_addEventListener];\\n\\n  var setTimeout = window.setTimeout;\\n\\n  var requestAnimationFrame = window.requestAnimationFrame || setTimeout;\\n\\n  var requestIdleCallback = window.requestIdleCallback;\\n\\n  var regPicture = /^picture$/i;\\n\\n  var loadEvents = [\\'load\\', \\'error\\', \\'lazyincluded\\', \\'_lazyloaded\\'];\\n\\n  var regClassCache = {};\\n\\n  var forEach = Array.prototype.forEach;\\n\\n  var hasClass = function(ele, cls) {\\n    if(!regClassCache[cls]){\\n      regClassCache[cls] = new RegExp(\\'(\\\\\\\\s|^)\\'+cls+\\'(\\\\\\\\s|$)\\');\\n    }\\n    return regClassCache[cls].test(ele[_getAttribute](\\'class\\') || \\'\\') && regClassCache[cls];\\n  };\\n\\n  var addClass = function(ele, cls) {\\n    if (!hasClass(ele, cls)){\\n      ele.setAttribute(\\'class\\', (ele[_getAttribute](\\'class\\') || \\'\\').trim() + \\' \\' + cls);\\n    }\\n  };\\n\\n  var removeClass = function(ele, cls) {\\n    var reg;\\n    if ((reg = hasClass(ele,cls))) {\\n      ele.setAttribute(\\'class\\', (ele[_getAttribute](\\'class\\') || \\'\\').replace(reg, \\' \\'));\\n    }\\n  };\\n\\n  var addRemoveLoadEvents = function(dom, fn, add){\\n    var action = add ? _addEventListener : \\'removeEventListener\\';\\n    if(add){\\n      addRemoveLoadEvents(dom, fn);\\n    }\\n    loadEvents.forEach(function(evt){\\n      dom[action](evt, fn);\\n    });\\n  };\\n\\n  var triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\\n    var event = document.createEvent(\\'CustomEvent\\');\\n\\n    if(!detail){\\n      detail = {};\\n    }\\n\\n    detail.instance = lazysizes;\\n\\n    event.initCustomEvent(name, !noBubbles, !noCancelable, detail);\\n\\n    elem.dispatchEvent(event);\\n    return event;\\n  };\\n\\n  var updatePolyfill = function (el, full){\\n    var polyfill;\\n    if( !supportPicture && ( polyfill = (window.picturefill || lazySizesConfig.pf) ) ){\\n      polyfill({reevaluate: true, elements: [el]});\\n    } else if(full && full.src){\\n      el.src = full.src;\\n    }\\n  };\\n\\n  var getCSS = function (elem, style){\\n    return (getComputedStyle(elem, null) || {})[style];\\n  };\\n\\n  var getWidth = function(elem, parent, width){\\n    width = width || elem.offsetWidth;\\n\\n    while(width < lazySizesConfig.minSize && parent && !elem._lazysizesWidth){\\n      width =  parent.offsetWidth;\\n      parent = parent.parentNode;\\n    }\\n\\n    return width;\\n  };\\n\\n  var rAF = (function(){\\n    var running, waiting;\\n    var firstFns = [];\\n    var secondFns = [];\\n    var fns = firstFns;\\n\\n    var run = function(){\\n      var runFns = fns;\\n\\n      fns = firstFns.length ? secondFns : firstFns;\\n\\n      running = true;\\n      waiting = false;\\n\\n      while(runFns.length){\\n        runFns.shift()();\\n      }\\n\\n      running = false;\\n    };\\n\\n    var rafBatch = function(fn, queue){\\n      if(running && !queue){\\n        fn.apply(this, arguments);\\n      } else {\\n        fns.push(fn);\\n\\n        if(!waiting){\\n          waiting = true;\\n          (document.hidden ? setTimeout : requestAnimationFrame)(run);\\n        }\\n      }\\n    };\\n\\n    rafBatch._lsFlush = run;\\n\\n    return rafBatch;\\n  })();\\n\\n  var rAFIt = function(fn, simple){\\n    return simple ?\\n      function() {\\n        rAF(fn);\\n      } :\\n      function(){\\n        var that = this;\\n        var args = arguments;\\n        rAF(function(){\\n          fn.apply(that, args);\\n        });\\n      }\\n    ;\\n  };\\n\\n  var throttle = function(fn){\\n    var running;\\n    var lastTime = 0;\\n    var gDelay = 125;\\n    var rICTimeout = lazySizesConfig.ricTimeout;\\n    var run = function(){\\n      running = false;\\n      lastTime = Date.now();\\n      fn();\\n    };\\n    var idleCallback = requestIdleCallback && lazySizesConfig.ricTimeout ?\\n      function(){\\n        requestIdleCallback(run, {timeout: rICTimeout});\\n\\n        if(rICTimeout !== lazySizesConfig.ricTimeout){\\n          rICTimeout = lazySizesConfig.ricTimeout;\\n        }\\n      } :\\n      rAFIt(function(){\\n        setTimeout(run);\\n      }, true)\\n    ;\\n\\n    return function(isPriority){\\n      var delay;\\n\\n      if((isPriority = isPriority === true)){\\n        rICTimeout = 33;\\n      }\\n\\n      if(running){\\n        return;\\n      }\\n\\n      running =  true;\\n\\n      delay = gDelay - (Date.now() - lastTime);\\n\\n      if(delay < 0){\\n        delay = 0;\\n      }\\n\\n      if(isPriority || (delay < 9 && requestIdleCallback)){\\n        idleCallback();\\n      } else {\\n        setTimeout(idleCallback, delay);\\n      }\\n    };\\n  };\\n\\n  //based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\\n  var debounce = function(func) {\\n    var timeout, timestamp;\\n    var wait = 99;\\n    var run = function(){\\n      timeout = null;\\n      func();\\n    };\\n    var later = function() {\\n      var last = Date.now() - timestamp;\\n\\n      if (last < wait) {\\n        setTimeout(later, wait - last);\\n      } else {\\n        (requestIdleCallback || run)(run);\\n      }\\n    };\\n\\n    return function() {\\n      timestamp = Date.now();\\n\\n      if (!timeout) {\\n        timeout = setTimeout(later, wait);\\n      }\\n    };\\n  };\\n\\n  (function(){\\n    var prop;\\n\\n    var lazySizesDefaults = {\\n      lazyClass: \\'lazyload\\',\\n      loadedClass: \\'lazyloaded\\',\\n      loadingClass: \\'lazyloading\\',\\n      preloadClass: \\'lazypreload\\',\\n      errorClass: \\'lazyerror\\',\\n      //strictClass: \\'lazystrict\\',\\n      autosizesClass: \\'lazyautosizes\\',\\n      srcAttr: \\'data-src\\',\\n      srcsetAttr: \\'data-srcset\\',\\n      sizesAttr: \\'data-sizes\\',\\n      //preloadAfterLoad: false,\\n      minSize: 40,\\n      customMedia: {},\\n      init: true,\\n      expFactor: 1.5,\\n      hFac: 0.8,\\n      loadMode: 2,\\n      loadHidden: true,\\n      ricTimeout: 300,\\n    };\\n\\n    lazySizesConfig = window.lazySizesConfig || window.lazysizesConfig || {};\\n\\n    for(prop in lazySizesDefaults){\\n      if(!(prop in lazySizesConfig)){\\n        lazySizesConfig[prop] = lazySizesDefaults[prop];\\n      }\\n    }\\n\\n    window.lazySizesConfig = lazySizesConfig;\\n\\n    setTimeout(function(){\\n      if(lazySizesConfig.init){\\n        init();\\n      }\\n    });\\n  })();\\n\\n  var loader = (function(){\\n    var preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\\n\\n    var eLvW, elvH, eLtop, eLleft, eLright, eLbottom;\\n\\n    var defaultExpand, preloadExpand, hFac;\\n\\n    var regImg = /^img$/i;\\n    var regIframe = /^iframe$/i;\\n\\n    var supportScroll = (\\'onscroll\\' in window) && !(/glebot/.test(navigator.userAgent));\\n\\n    var shrinkExpand = 0;\\n    var currentExpand = 0;\\n\\n    var isLoading = 0;\\n    var lowRuns = -1;\\n\\n    var resetPreloading = function(e){\\n      isLoading--;\\n      if(e && e.target){\\n        addRemoveLoadEvents(e.target, resetPreloading);\\n      }\\n\\n      if(!e || isLoading < 0 || !e.target){\\n        isLoading = 0;\\n      }\\n    };\\n\\n    var isNestedVisible = function(elem, elemExpand){\\n      var outerRect;\\n      var parent = elem;\\n      var visible = getCSS(document.body, \\'visibility\\') == \\'hidden\\' || getCSS(elem, \\'visibility\\') != \\'hidden\\';\\n\\n      eLtop -= elemExpand;\\n      eLbottom += elemExpand;\\n      eLleft -= elemExpand;\\n      eLright += elemExpand;\\n\\n      while(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\\n        visible = ((getCSS(parent, \\'opacity\\') || 1) > 0);\\n\\n        if(visible && getCSS(parent, \\'overflow\\') != \\'visible\\'){\\n          outerRect = parent.getBoundingClientRect();\\n          visible = eLright > outerRect.left &&\\n            eLleft < outerRect.right &&\\n            eLbottom > outerRect.top - 1 &&\\n            eLtop < outerRect.bottom + 1\\n          ;\\n        }\\n      }\\n\\n      return visible;\\n    };\\n\\n    var checkElements = function() {\\n      var eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal;\\n\\n      var lazyloadElems = lazysizes.elements;\\n\\n      if((loadMode = lazySizesConfig.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\\n\\n        i = 0;\\n\\n        lowRuns++;\\n\\n        if(preloadExpand == null){\\n          if(!(\\'expand\\' in lazySizesConfig)){\\n            lazySizesConfig.expand = docElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370;\\n          }\\n\\n          defaultExpand = lazySizesConfig.expand;\\n          preloadExpand = defaultExpand * lazySizesConfig.expFactor;\\n        }\\n\\n        if(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden){\\n          currentExpand = preloadExpand;\\n          lowRuns = 0;\\n        } else if(loadMode > 1 && lowRuns > 1 && isLoading < 6){\\n          currentExpand = defaultExpand;\\n        } else {\\n          currentExpand = shrinkExpand;\\n        }\\n\\n        for(; i < eLlen; i++){\\n\\n          if(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\\n\\n          if(!supportScroll){unveilElement(lazyloadElems[i]);continue;}\\n\\n          if(!(elemExpandVal = lazyloadElems[i][_getAttribute](\\'data-expand\\')) || !(elemExpand = elemExpandVal * 1)){\\n            elemExpand = currentExpand;\\n          }\\n\\n          if(beforeExpandVal !== elemExpand){\\n            eLvW = innerWidth + (elemExpand * hFac);\\n            elvH = innerHeight + elemExpand;\\n            elemNegativeExpand = elemExpand * -1;\\n            beforeExpandVal = elemExpand;\\n          }\\n\\n          rect = lazyloadElems[i].getBoundingClientRect();\\n\\n          if ((eLbottom = rect.bottom) >= elemNegativeExpand &&\\n            (eLtop = rect.top) <= elvH &&\\n            (eLright = rect.right) >= elemNegativeExpand * hFac &&\\n            (eLleft = rect.left) <= eLvW &&\\n            (eLbottom || eLright || eLleft || eLtop) &&\\n            (lazySizesConfig.loadHidden || getCSS(lazyloadElems[i], \\'visibility\\') != \\'hidden\\') &&\\n            ((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\\n            unveilElement(lazyloadElems[i]);\\n            loadedSomething = true;\\n            if(isLoading > 9){break;}\\n          } else if(!loadedSomething && isCompleted && !autoLoadElem &&\\n            isLoading < 4 && lowRuns < 4 && loadMode > 2 &&\\n            (preloadElems[0] || lazySizesConfig.preloadAfterLoad) &&\\n            (preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesConfig.sizesAttr) != \\'auto\\')))){\\n            autoLoadElem = preloadElems[0] || lazyloadElems[i];\\n          }\\n        }\\n\\n        if(autoLoadElem && !loadedSomething){\\n          unveilElement(autoLoadElem);\\n        }\\n      }\\n    };\\n\\n    var throttledCheckElements = throttle(checkElements);\\n\\n    var switchLoadingClass = function(e){\\n      addClass(e.target, lazySizesConfig.loadedClass);\\n      removeClass(e.target, lazySizesConfig.loadingClass);\\n      addRemoveLoadEvents(e.target, rafSwitchLoadingClass);\\n      triggerEvent(e.target, \\'lazyloaded\\');\\n    };\\n    var rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\\n    var rafSwitchLoadingClass = function(e){\\n      rafedSwitchLoadingClass({target: e.target});\\n    };\\n\\n    var changeIframeSrc = function(elem, src){\\n      try {\\n        elem.contentWindow.location.replace(src);\\n      } catch(e){\\n        elem.src = src;\\n      }\\n    };\\n\\n    var handleSources = function(source){\\n      var customMedia;\\n\\n      var sourceSrcset = source[_getAttribute](lazySizesConfig.srcsetAttr);\\n\\n      if( (customMedia = lazySizesConfig.customMedia[source[_getAttribute](\\'data-media\\') || source[_getAttribute](\\'media\\')]) ){\\n        source.setAttribute(\\'media\\', customMedia);\\n      }\\n\\n      if(sourceSrcset){\\n        source.setAttribute(\\'srcset\\', sourceSrcset);\\n      }\\n    };\\n\\n    var lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\\n      var src, srcset, parent, isPicture, event, firesLoad;\\n\\n      if(!(event = triggerEvent(elem, \\'lazybeforeunveil\\', detail)).defaultPrevented){\\n\\n        if(sizes){\\n          if(isAuto){\\n            addClass(elem, lazySizesConfig.autosizesClass);\\n          } else {\\n            elem.setAttribute(\\'sizes\\', sizes);\\n          }\\n        }\\n\\n        srcset = elem[_getAttribute](lazySizesConfig.srcsetAttr);\\n        src = elem[_getAttribute](lazySizesConfig.srcAttr);\\n\\n        if(isImg) {\\n          parent = elem.parentNode;\\n          isPicture = parent && regPicture.test(parent.nodeName || \\'\\');\\n        }\\n\\n        firesLoad = detail.firesLoad || ((\\'src\\' in elem) && (srcset || src || isPicture));\\n\\n        event = {target: elem};\\n\\n        if(firesLoad){\\n          addRemoveLoadEvents(elem, resetPreloading, true);\\n          clearTimeout(resetPreloadingTimer);\\n          resetPreloadingTimer = setTimeout(resetPreloading, 2500);\\n\\n          addClass(elem, lazySizesConfig.loadingClass);\\n          addRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\\n        }\\n\\n        if(isPicture){\\n          forEach.call(parent.getElementsByTagName(\\'source\\'), handleSources);\\n        }\\n\\n        if(srcset){\\n          elem.setAttribute(\\'srcset\\', srcset);\\n        } else if(src && !isPicture){\\n          if(regIframe.test(elem.nodeName)){\\n            changeIframeSrc(elem, src);\\n          } else {\\n            elem.src = src;\\n          }\\n        }\\n\\n        if(isImg && (srcset || isPicture)){\\n          updatePolyfill(elem, {src: src});\\n        }\\n      }\\n\\n      if(elem._lazyRace){\\n        delete elem._lazyRace;\\n      }\\n      removeClass(elem, lazySizesConfig.lazyClass);\\n\\n      rAF(function(){\\n        if( !firesLoad || (elem.complete && elem.naturalWidth > 1)){\\n          if(firesLoad){\\n            resetPreloading(event);\\n          } else {\\n            isLoading--;\\n          }\\n          switchLoadingClass(event);\\n        }\\n      }, true);\\n    });\\n\\n    var unveilElement = function (elem){\\n      var detail;\\n\\n      var isImg = regImg.test(elem.nodeName);\\n\\n      //allow using sizes=\"auto\", but don\\'t use. it\\'s invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\\n      var sizes = isImg && (elem[_getAttribute](lazySizesConfig.sizesAttr) || elem[_getAttribute](\\'sizes\\'));\\n      var isAuto = sizes == \\'auto\\';\\n\\n      if( (isAuto || !isCompleted) && isImg && (elem[_getAttribute](\\'src\\') || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesConfig.errorClass) && hasClass(elem, lazySizesConfig.lazyClass)){return;}\\n\\n      detail = triggerEvent(elem, \\'lazyunveilread\\').detail;\\n\\n      if(isAuto){\\n         autoSizer.updateElem(elem, true, elem.offsetWidth);\\n      }\\n\\n      elem._lazyRace = true;\\n      isLoading++;\\n\\n      lazyUnveil(elem, detail, isAuto, sizes, isImg);\\n    };\\n\\n    var onload = function(){\\n      if(isCompleted){return;}\\n      if(Date.now() - started < 999){\\n        setTimeout(onload, 999);\\n        return;\\n      }\\n      var afterScroll = debounce(function(){\\n        lazySizesConfig.loadMode = 3;\\n        throttledCheckElements();\\n      });\\n\\n      isCompleted = true;\\n\\n      lazySizesConfig.loadMode = 3;\\n\\n      throttledCheckElements();\\n\\n      addEventListener(\\'scroll\\', function(){\\n        if(lazySizesConfig.loadMode == 3){\\n          lazySizesConfig.loadMode = 2;\\n        }\\n        afterScroll();\\n      }, true);\\n    };\\n\\n    return {\\n      _: function(){\\n        started = Date.now();\\n\\n        lazysizes.elements = document.getElementsByClassName(lazySizesConfig.lazyClass);\\n        preloadElems = document.getElementsByClassName(lazySizesConfig.lazyClass + \\' \\' + lazySizesConfig.preloadClass);\\n        hFac = lazySizesConfig.hFac;\\n\\n        addEventListener(\\'scroll\\', throttledCheckElements, true);\\n\\n        addEventListener(\\'resize\\', throttledCheckElements, true);\\n\\n        if(window.MutationObserver){\\n          new MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\\n        } else {\\n          docElem[_addEventListener](\\'DOMNodeInserted\\', throttledCheckElements, true);\\n          docElem[_addEventListener](\\'DOMAttrModified\\', throttledCheckElements, true);\\n          setInterval(throttledCheckElements, 999);\\n        }\\n\\n        addEventListener(\\'hashchange\\', throttledCheckElements, true);\\n\\n        //, \\'fullscreenchange\\'\\n        [\\'focus\\', \\'mouseover\\', \\'click\\', \\'load\\', \\'transitionend\\', \\'animationend\\', \\'webkitAnimationEnd\\'].forEach(function(name){\\n          document[_addEventListener](name, throttledCheckElements, true);\\n        });\\n\\n        if((/d$|^c/.test(document.readyState))){\\n          onload();\\n        } else {\\n          addEventListener(\\'load\\', onload);\\n          document[_addEventListener](\\'DOMContentLoaded\\', throttledCheckElements);\\n          setTimeout(onload, 20000);\\n        }\\n\\n        if(lazysizes.elements.length){\\n          checkElements();\\n          rAF._lsFlush();\\n        } else {\\n          throttledCheckElements();\\n        }\\n      },\\n      checkElems: throttledCheckElements,\\n      unveil: unveilElement\\n    };\\n  })();\\n\\n\\n  var autoSizer = (function(){\\n    var autosizesElems;\\n\\n    var sizeElement = rAFIt(function(elem, parent, event, width){\\n      var sources, i, len;\\n      elem._lazysizesWidth = width;\\n      width += \\'px\\';\\n\\n      elem.setAttribute(\\'sizes\\', width);\\n\\n      if(regPicture.test(parent.nodeName || \\'\\')){\\n        sources = parent.getElementsByTagName(\\'source\\');\\n        for(i = 0, len = sources.length; i < len; i++){\\n          sources[i].setAttribute(\\'sizes\\', width);\\n        }\\n      }\\n\\n      if(!event.detail.dataAttr){\\n        updatePolyfill(elem, event.detail);\\n      }\\n    });\\n    var getSizeElement = function (elem, dataAttr, width){\\n      var event;\\n      var parent = elem.parentNode;\\n\\n      if(parent){\\n        width = getWidth(elem, parent, width);\\n        event = triggerEvent(elem, \\'lazybeforesizes\\', {width: width, dataAttr: !!dataAttr});\\n\\n        if(!event.defaultPrevented){\\n          width = event.detail.width;\\n\\n          if(width && width !== elem._lazysizesWidth){\\n            sizeElement(elem, parent, event, width);\\n          }\\n        }\\n      }\\n    };\\n\\n    var updateElementsSizes = function(){\\n      var i;\\n      var len = autosizesElems.length;\\n      if(len){\\n        i = 0;\\n\\n        for(; i < len; i++){\\n          getSizeElement(autosizesElems[i]);\\n        }\\n      }\\n    };\\n\\n    var debouncedUpdateElementsSizes = debounce(updateElementsSizes);\\n\\n    return {\\n      _: function(){\\n        autosizesElems = document.getElementsByClassName(lazySizesConfig.autosizesClass);\\n        addEventListener(\\'resize\\', debouncedUpdateElementsSizes);\\n      },\\n      checkElems: debouncedUpdateElementsSizes,\\n      updateElem: getSizeElement\\n    };\\n  })();\\n\\n  var init = function(){\\n    if(!init.i){\\n      init.i = true;\\n      autoSizer._();\\n      loader._();\\n    }\\n  };\\n\\n  lazysizes = {\\n    cfg: lazySizesConfig,\\n    autoSizer: autoSizer,\\n    loader: loader,\\n    init: init,\\n    uP: updatePolyfill,\\n    aC: addClass,\\n    rC: removeClass,\\n    hC: hasClass,\\n    fire: triggerEvent,\\n    gW: getWidth,\\n    rAF: rAF,\\n  };\\n\\n  return lazysizes;\\n}\\n));\\n\\n\\n} )( jQuery, window, document );\\n', 'comment': ''}, 'redirectURL': '', 'headersSize': 298, 'bodySize': 9408, 'comment': ''}, 'cache': {}, 'timings': {'comment': '', 'send': 0, 'wait': 144, 'dns': -1, 'blocked': -1, 'connect': -1, 'receive': 3, 'ssl': -1}, 'serverIPAddress': '8.243.100.140', 'comment': '', 'time': 148}"